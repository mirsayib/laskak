{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.postgresql.name }}
spec:
  serviceName: "{{ .Values.postgresql.name }}"
  replicas: {{ .Values.postgresql.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.postgresql.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgresql.name }}
    spec:
      containers:
      - name: {{ .Values.postgresql.name }}
        image: {{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}
        ports:
        - containerPort: {{ .Values.postgresql.port }}
        env:
        - name: POSTGRES_USER
          value: {{ .Values.postgresql.user }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgresql.password }}
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.postgresql.persistence.size }}

---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.postgresql.name }}
  labels:
    app: {{ .Values.postgresql.name }}
spec:
  ports:
  - port: {{ .Values.postgresql.port }}
    name: postgres
  clusterIP: None
  selector:
    app: {{ .Values.postgresql.name }}
{{- end }}

